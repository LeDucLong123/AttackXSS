<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blog Community</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f0f2f5;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .navbar {
            background: linear-gradient(135deg, #1877f2, #42b883);
        }

        .navbar-brand,
        .nav-link {
            color: white !important;
        }

        .main-container {
            max-width: 680px;
            margin: 20px auto;
            padding: 0 15px;
        }

        .post-item {
            background: white;
            border-radius: 8px;
            padding: 16px;
            margin-bottom: 16px;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
        }

        .post-author {
            font-weight: 600;
            color: #1877f2;
        }

        .post-title {
            font-size: 18px;
            font-weight: 600;
            margin: 8px 0;
        }

        .post-content {
            color: #65676b;
            line-height: 1.6;
            white-space: pre-line;
        }

        .post-time {
            color: #8a8d91;
            font-size: 13px;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            background: #1877f2;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
        }
    </style>
</head>

<body>
    <nav class="navbar navbar-expand-lg">
        <div class="container-fluid">
            <a class="navbar-brand" href="/"><i class="fas fa-blog me-2"></i>My Blog Community</a>
            <div class="navbar-nav ms-auto">
                <a class="nav-link" href="/"><i class="fas fa-home me-1"></i>Trang chủ</a>
                <a class="nav-link active" href="/blog"><i class="fas fa-newspaper me-1"></i>Blog</a>
                <a class="nav-link" href="/auth" id="authLink"><i class="fas fa-user me-1"></i>Đăng nhập</a>
                <a class="nav-link" href="#" id="logoutLink" style="display: none;" onclick="logout()">
                    <i class="fas fa-sign-out-alt me-1"></i>Đăng xuất
                </a>
            </div>
        </div>
    </nav>

    <div class="main-container">
        <div class="card mb-4">
            <div class="card-body text-center">
                <h6><i class="fas fa-chart-bar me-2"></i>Thống kê cộng đồng</h6>
                <div class="row">
                    <div class="col-6">
                        <div class="h4 text-primary" id="totalPosts">
                            <%= stats.totalPosts %>
                        </div>
                        <small>Bài đăng</small>
                    </div>
                    <div class="col-6">
                        <div class="h4 text-primary" id="totalUsers">
                            <%= stats.totalUsers %>
                        </div>
                        <small>Thành viên</small>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-body">
                <% if (user) { %>
                    <form id="postForm">
                        <div class="d-flex align-items-center mb-3">
                            <div class="user-avatar me-3"><i class="fas fa-user"></i></div>
                            <input type="text" class="form-control" value="<%= user.name %>" readonly
                                style="background-color: #f8f9fa;">
                        </div>
                        <div class="mb-3">
                            <input type="text" class="form-control" id="postTitle" placeholder="Tiêu đề bài viết..."
                                required>
                        </div>
                        <div class="mb-3">
                            <textarea class="form-control" id="postContent" rows="3" placeholder="Bạn đang nghĩ gì?"
                                required></textarea>
                        </div>
                        <div class="d-flex justify-content-between">
                            <small class="text-muted"><i class="fas fa-globe me-1"></i>Công khai</small>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-paper-plane me-1"></i>Đăng bài
                            </button>
                        </div>
                    </form>
                    <% } else { %>
                        <div class="alert alert-warning">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            Bạn cần <a href="/auth">đăng nhập</a> để đăng bài viết.
                        </div>
                        <% } %>
            </div>
        </div>

        <div id="postsContainer">
            <% if (posts && posts.length> 0) { %>
                <% posts.forEach(post=> { %>
                    <div class="post-item">
                        <div class="d-flex align-items-center mb-3">
                            <div class="user-avatar me-3"><i class="fas fa-user"></i></div>
                            <div>
                                <div class="post-author">
                                    <%= post.author.name %>
                                </div>
                                <div class="post-time">
                                    <%= post.timeAgo || 'Vừa xong' %>
                                </div>
                            </div>
                        </div>
                        <div class="post-title">
                            <%- post.title %>
                        </div>
                        <div class="post-content">
                            <%- post.content %>
                        </div>
                    </div>
                    <% }) %>
                        <% } %>
        </div>

        <% if (!posts || posts.length===0) { %>
            <div class="text-center py-5" id="emptyState">
                <i class="fas fa-comments fa-3x text-muted mb-3"></i>
                <h5>Chưa có bài đăng nào</h5>
                <p class="text-muted">Hãy là người đầu tiên chia sẻ suy nghĩ của bạn!</p>
            </div>
            <% } %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script id="__SERVER_DATA__" type="application/json">
        {"posts": <%- JSON.stringify(posts || []) %>, "stats": <%- JSON.stringify(stats || {}) %>, "user": <%- JSON.stringify(user || null) %>}
    </script>
    <script>
        // Đọc dữ liệu từ server đã nhúng ở script[type=application/json]
        let serverPosts = [];
        let serverStats = {};
        let currentUser = null;
        (function () {
            try {
                const el = document.getElementById('__SERVER_DATA__');
                if (el && el.textContent) {
                    const data = JSON.parse(el.textContent);
                    serverPosts = Array.isArray(data.posts) ? data.posts : [];
                    serverStats = data.stats || {};
                    currentUser = data.user || null;
                }
            } catch (e) {
                console.error('Parse server data error:', e);
            }
        })();

        // Đăng xuất
        async function logout() {
            try {
                const res = await fetch('/auth/logout', { method: 'POST' });
                // Bất kể thành công hay không, quay về trang đăng nhập
                window.location.href = '/auth';
            } catch (err) {
                console.error('Logout error:', err);
                window.location.href = '/auth';
            }
        }

        // Định dạng thời gian hiển thị
        function formatTime(ts) {
            const now = new Date();
            const postTime = new Date(ts);
            const diff = now - postTime;
            const hours = Math.floor(diff / 3600000);
            const days = Math.floor(diff / 86400000);
            if (hours < 1) return 'Vừa xong';
            if (hours < 24) return hours + ' giờ trước';
            if (days < 7) return days + ' ngày trước';
            return postTime.toLocaleDateString('vi-VN');
        }

        // Cập nhật số liệu thống kê từ server
        function updateStatsFromServer() {
            const totalPostsEl = document.getElementById('totalPosts');
            const totalUsersEl = document.getElementById('totalUsers');
            if (totalPostsEl) totalPostsEl.textContent = serverStats.totalPosts || 0;
            if (totalUsersEl) totalUsersEl.textContent = serverStats.totalUsers || 0;
        }

        // Thêm bài viết mới vào đầu danh sách (DOM-only, chống XSS bằng textContent)
        function prependPostToList(post) {
            const container = document.getElementById('postsContainer');
            const emptyState = document.getElementById('emptyState');
            if (!container) return;
            if (emptyState) emptyState.style.display = 'none';

            const wrapper = document.createElement('div');
            wrapper.className = 'post-item';

            const header = document.createElement('div');
            header.className = 'd-flex align-items-center mb-3';

            const avatar = document.createElement('div');
            avatar.className = 'user-avatar me-3';
            avatar.innerHTML = '<i class="fas fa-user"></i>';

            const meta = document.createElement('div');
            const authorEl = document.createElement('div');
            authorEl.className = 'post-author';
            authorEl.textContent = post.author && post.author.name ? post.author.name : 'Người dùng';
            const timeEl = document.createElement('div');
            timeEl.className = 'post-time';
            timeEl.textContent = formatTime(post.createdAt || Date.now());
            meta.appendChild(authorEl);
            meta.appendChild(timeEl);

            header.appendChild(avatar);
            header.appendChild(meta);

            const titleEl = document.createElement('div');
            titleEl.className = 'post-title';
            titleEl.textContent = post.title || '';

            const contentEl = document.createElement('div');
            contentEl.className = 'post-content';
            contentEl.textContent = post.content || '';

            wrapper.appendChild(header);
            wrapper.appendChild(titleEl);
            wrapper.appendChild(contentEl);

            container.prepend(wrapper);
        }

        // Tạo bài viết (lưu DB qua API), sau đó hiển thị ngay và reload để đồng bộ
        async function createPost() {
            const titleInput = document.getElementById('postTitle');
            const contentInput = document.getElementById('postContent');
            const title = (titleInput?.value || '').trim();
            const content = (contentInput?.value || '').trim();

            if (!title || !content) {
                alert('Vui lòng điền đầy đủ thông tin!');
                return;
            }
            try {
                const res = await fetch('/blog', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ title, content })
                });
                const data = await res.json();
                if (data && data.success) {
                    prependPostToList(data.post);
                    // Xóa form và reload để đồng bộ thống kê + danh sách server-rendered
                    const form = document.getElementById('postForm');
                    if (form) form.reset();
                    window.location.reload();
                } else {
                    alert((data && data.message) || 'Đăng bài không thành công');
                }
            } catch (err) {
                console.error('Create post error:', err);
                alert('Có lỗi xảy ra khi đăng bài!');
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            // Ẩn empty state nếu đã có bài viết server-rendered
            const emptyState = document.getElementById('emptyState');
            if (emptyState && Array.isArray(serverPosts) && serverPosts.length > 0) {
                emptyState.style.display = 'none';
            }
            // Cập nhật thống kê
            updateStatsFromServer();

            // Navbar: hiển thị nút đăng xuất nếu đã đăng nhập
            const authLink = document.getElementById('authLink');
            const logoutLink = document.getElementById('logoutLink');
            if (currentUser && authLink && logoutLink) {
                authLink.innerHTML = `<i class="fas fa-user-circle me-1"></i>${currentUser.name}`;
                authLink.onclick = (e) => e.preventDefault();
                authLink.style.cursor = 'default';
                authLink.style.color = '#28a745';
                logoutLink.style.display = 'block';
            }

            // Gắn submit handler cho form tạo bài viết
            const postForm = document.getElementById('postForm');
            if (postForm) {
                postForm.addEventListener('submit', (e) => {
                    e.preventDefault();
                    createPost();
                });
            }
        });
    </script>
</body>

</html>